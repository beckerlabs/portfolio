/*! tailwindcss v4.1.0 | MIT License | https://tailwindcss.com */
@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
  @layer base {
    *, ::before, ::after, ::backdrop {
      --tw-space-x-reverse: 0;
    }
  }
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-cyan-300: oklch(86.5% 0.127 207.078);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --radius-2xl: 1rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .fixed {
    position: fixed;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .top-\[100vh\] {
    top: 100vh;
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .float-right {
    float: right;
  }
  .m-10 {
    margin: calc(var(--spacing) * 10);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .h-screen {
    height: 100vh;
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-1\/4 {
    width: calc(1/4 * 100%);
  }
  .w-1\/6 {
    width: calc(1/6 * 100%);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-4\/6 {
    width: calc(4/6 * 100%);
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .w-svw {
    width: 100svw;
  }
  .max-w-1 {
    max-width: calc(var(--spacing) * 1);
  }
  .max-w-1\/3 {
    max-width: calc(1/3 * 100%);
  }
  .max-w-1\/6 {
    max-width: calc(1/6 * 100%);
  }
  .max-w-3\/4 {
    max-width: calc(3/4 * 100%);
  }
  .max-w-10 {
    max-width: calc(var(--spacing) * 10);
  }
  .max-w-20 {
    max-width: calc(var(--spacing) * 20);
  }
  .max-w-60 {
    max-width: calc(var(--spacing) * 60);
  }
  .min-w-1 {
    min-width: calc(var(--spacing) * 1);
  }
  .min-w-1\/3 {
    min-width: calc(1/3 * 100%);
  }
  .min-w-1\/6 {
    min-width: calc(1/6 * 100%);
  }
  .min-w-1\/8 {
    min-width: calc(1/8 * 100%);
  }
  .min-w-3\/4 {
    min-width: calc(3/4 * 100%);
  }
  .min-w-10 {
    min-width: calc(var(--spacing) * 10);
  }
  .min-w-20 {
    min-width: calc(var(--spacing) * 20);
  }
  .min-w-40 {
    min-width: calc(var(--spacing) * 40);
  }
  .min-w-60 {
    min-width: calc(var(--spacing) * 60);
  }
  .flex-1\/6 {
    flex: calc(1/6 * 100%);
  }
  .flex-4\/6 {
    flex: calc(4/6 * 100%);
  }
  .flex-none {
    flex: none;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-1\/6 {
    flex-basis: calc(1/6 * 100%);
  }
  .basis-4\/6 {
    flex-basis: calc(4/6 * 100%);
  }
  .columns-3 {
    columns: 3;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
  .grid-cols-\[max-content_1fr\] {
    grid-template-columns: max-content 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .justify-between {
    justify-content: space-between;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .object-scale-down {
    object-fit: scale-down;
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .p-14 {
    padding: calc(var(--spacing) * 14);
  }
  .p-20 {
    padding: calc(var(--spacing) * 20);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-14 {
    padding-inline: calc(var(--spacing) * 14);
  }
  .px-96 {
    padding-inline: calc(var(--spacing) * 96);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pl-0\.5 {
    padding-left: calc(var(--spacing) * 0.5);
  }
  .pl-1 {
    padding-left: calc(var(--spacing) * 1);
  }
  .pl-1\.5 {
    padding-left: calc(var(--spacing) * 1.5);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .whitespace-break-spaces {
    white-space: break-spaces;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-purple-500 {
    color: var(--color-purple-500);
  }
  .text-slate-500 {
    color: var(--color-slate-500);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .hover\:text-blue-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-400);
      }
    }
  }
  .hover\:text-blue-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-yellow-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-400);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .has-\[a\]\:text-blue-400 {
    &:has(*:is(a)) {
      color: var(--color-blue-400);
    }
  }
  .sm\:text-4xl {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .dark\:bg-slate-800 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-slate-800);
    }
  }
  .dark\:text-gray-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-white);
    }
  }
  .\[\&_a\]\:text-blue-400 {
    & a {
      color: var(--color-blue-400);
    }
  }
  .\[\&_a\]\:underline {
    & a {
      text-decoration-line: underline;
    }
  }
  .\[\&_a\]\:decoration-blue-400 {
    & a {
      text-decoration-color: var(--color-blue-400);
    }
  }
  .\[\&_a\]\:decoration-1 {
    & a {
      text-decoration-thickness: 1px;
    }
  }
  .\[\&_a\]\:hover\:text-blue-600 {
    & a {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-600);
        }
      }
    }
  }
  .\[\&_a\]\:hover\:underline {
    & a {
      &:hover {
        @media (hover: hover) {
          text-decoration-line: underline;
        }
      }
    }
  }
  .\[\&_code\]\:bg-black {
    & code {
      background-color: var(--color-black);
    }
  }
  .\[\&_h2\]\:py-4 {
    & h2 {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .\[\&_h2\]\:text-xl {
    & h2 {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .\[\&_h2\]\:text-blue-500 {
    & h2 {
      color: var(--color-blue-500);
    }
  }
  .\[\&_h2\]\:text-gray-400 {
    & h2 {
      color: var(--color-gray-400);
    }
  }
  .\[\&_h2\]\:text-gray-500 {
    & h2 {
      color: var(--color-gray-500);
    }
  }
  .\[\&_li\]\:hover\:text-blue-500 {
    & li {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-500);
        }
      }
    }
  }
  .\[\&_li\]\:hover\:text-cyan-300 {
    & li {
      &:hover {
        @media (hover: hover) {
          color: var(--color-cyan-300);
        }
      }
    }
  }
  .\[\&_p\]\:py-4 {
    & p {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .\[\&_p\]\:pb-4 {
    & p {
      padding-bottom: calc(var(--spacing) * 4);
    }
  }
  .\[\&_pre\]\:bg-black {
    & pre {
      background-color: var(--color-black);
    }
  }
  .\[\&_pre\]\:px-4 {
    & pre {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .\[\&_pre\]\:text-green-400 {
    & pre {
      color: var(--color-green-400);
    }
  }
  .\[h2\]\:text-blue-500 {
    &:is(h2) {
      color: var(--color-blue-500);
    }
  }
  .\[\&\>h2\]\:bg-red-500 {
    &>h2 {
      background-color: var(--color-red-500);
    }
  }
  .\[\&\>h2\]\:text-blue-500 {
    &>h2 {
      color: var(--color-blue-500);
    }
  }
  .\[\&h2\]\:text-blue-500 {
    &h2 {
      color: var(--color-blue-500);
    }
  }
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
